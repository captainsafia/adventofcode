<Project>
  <PropertyGroup>
    <CommitBranch Condition=" '$(CommitBranch)' == '' and '$(GITHUB_REF)' != '' ">$(GITHUB_REF.Substring(11))</CommitBranch>
    <CommitHash Condition=" '$(CommitHash)' == '' ">$(GITHUB_SHA)</CommitHash>
    <DeployId Condition=" '$(DeployId)' == '' ">$(GITHUB_RUN_ID)</DeployId>
  </PropertyGroup>
  <Target Name="AddGitMetadaAssemblyAttributes"
          BeforeTargets="CoreGenerateAssemblyInfo">
    <Exec Command="git rev-parse HEAD" ConsoleToMSBuild="true" StandardOutputImportance="low" IgnoreExitCode="true" Condition=" '$(CommitHash)' == '' ">
      <Output TaskParameter="ConsoleOutput" PropertyName="CommitHash" />
    </Exec>
    <Exec Command="git rev-parse --abbrev-ref HEAD" ConsoleToMSBuild="true" StandardOutputImportance="low" IgnoreExitCode="true" Condition=" '$(CommitBranch)' == '' ">
      <Output TaskParameter="ConsoleOutput" PropertyName="CommitBranch" />
    </Exec>
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>BuildTimestamp</_Parameter1>
        <_Parameter2>$([System.DateTime]::UtcNow.ToString(yyyy-MM-ddTHH:mm:ssK))</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute" Condition=" $(CommitHash) != '' ">
        <_Parameter1>CommitHash</_Parameter1>
        <_Parameter2>$(CommitHash)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute" Condition=" $(CommitBranch) != '' ">
        <_Parameter1>CommitBranch</_Parameter1>
        <_Parameter2>$(CommitBranch)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute" Condition=" $(DeployId) != '' ">
        <_Parameter1>DeployId</_Parameter1>
        <_Parameter2>$(DeployId)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>
  <!--
    HACK Workaround for https://github.com/dotnet/runtime/issues/62840#issuecomment-996304171
  -->
  <Target Name="RemoveSystemRuntimeFromRefPack"
          BeforeTargets="_HandlePackageFileConflicts"
          Condition="'@(Reference -> WithMetadataValue('NugetPackageId', 'System.Runtime.Experimental'))' != ''">
    <ItemGroup>
      <Reference Remove="@(Reference)"
                 Condition="$([System.String]::Copy(%(Reference.Identity)).Contains('System.Runtime.dll')) and
                            '%(Reference.NuGetPackageId)' == 'Microsoft.NETCore.App.Ref'" />
    </ItemGroup>
  </Target>
</Project>
